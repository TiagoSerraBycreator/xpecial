const { config } = require('dotenv');

// Carrega as vari√°veis de ambiente
config();

console.log('üîç Verificando vari√°veis de ambiente do NextAuth...\n');

const requiredVars = [
  'NEXTAUTH_URL',
  'NEXTAUTH_SECRET',
  'DATABASE_URL'
];

const optionalVars = [
  'SMTP_HOST',
  'SMTP_PORT', 
  'SMTP_USER',
  'SMTP_PASSWORD',
  'SMTP_FROM'
];

let hasErrors = false;

console.log('üìã VARI√ÅVEIS OBRIGAT√ìRIAS:');
requiredVars.forEach(varName => {
  const value = process.env[varName];
  if (value) {
    console.log(`‚úÖ ${varName}: ${varName === 'NEXTAUTH_SECRET' ? '[DEFINIDO]' : value}`);
  } else {
    console.log(`‚ùå ${varName}: N√ÉO DEFINIDO`);
    hasErrors = true;
  }
});

console.log('\nüìã VARI√ÅVEIS OPCIONAIS (para email):');
optionalVars.forEach(varName => {
  const value = process.env[varName];
  if (value) {
    console.log(`‚úÖ ${varName}: ${varName.includes('PASSWORD') ? '[DEFINIDO]' : value}`);
  } else {
    console.log(`‚ö†Ô∏è  ${varName}: N√ÉO DEFINIDO`);
  }
});

console.log('\nüîß DIAGN√ìSTICO:');
if (hasErrors) {
  console.log('‚ùå Existem vari√°veis obrigat√≥rias n√£o definidas!');
  console.log('üí° Verifique se o arquivo .env existe e cont√©m todas as vari√°veis necess√°rias.');
} else {
  console.log('‚úÖ Todas as vari√°veis obrigat√≥rias est√£o definidas!');
}

// Verificar se NEXTAUTH_URL est√° correto
const nextAuthUrl = process.env.NEXTAUTH_URL;
if (nextAuthUrl && !nextAuthUrl.startsWith('http')) {
  console.log('‚ö†Ô∏è  NEXTAUTH_URL deve come√ßar com http:// ou https://');
  hasErrors = true;
}

// Verificar se NEXTAUTH_SECRET tem tamanho adequado
const nextAuthSecret = process.env.NEXTAUTH_SECRET;
if (nextAuthSecret && nextAuthSecret.length < 32) {
  console.log('‚ö†Ô∏è  NEXTAUTH_SECRET deve ter pelo menos 32 caracteres');
  hasErrors = true;
}

console.log('\nüéØ RESULTADO FINAL:');
if (hasErrors) {
  console.log('‚ùå Configura√ß√£o com problemas - isso pode causar CLIENT_FETCH_ERROR');
  process.exit(1);
} else {
  console.log('‚úÖ Configura√ß√£o parece estar correta!');
  process.exit(0);
}